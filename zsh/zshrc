###############################################################################
# Completion                                                                  #
###############################################################################
setopt ALWAYS_TO_END                                                          # the cursor is moved to the end of the word if a completion is performed with the cursor within a word
setopt AUTO_MENU                                                              # show completion menu on successive tab press
setopt COMPLETE_ALIASES                                                       # prevents aliases on the command line from being internally substituted before completion is attempted
setopt COMPLETE_IN_WORD                                                       # the cursor is set to the end of the word if completion is started
unsetopt MENU_COMPLETE                                                        # do not autoselect the first completion entry
unsetopt FLOW_CONTROL                                                         # output flow control via start/stop characters (usually assigned to ^S/^Q) is disabled in the shell's editor
stty start undef                                                              # disable ctrl-q to unfreeze terminal
stty stop undef                                                               # disable ctrl-s to freeze terminal
setopt GLOB_DOTS                                                              # do not require a leading `.' in a filename to be matched explicitly

autoload -Uz compinit && compinit                                             # initialize autocomplete
zstyle ':completion:*' menu select
zmodload zsh/complist
_comp_options+=(globdots)                                                     # include hidden files
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'                           # matches case insensitive for lowercase
zstyle ':completion:*' insert-tab pending                                     # pasting with tabs doesn't perform completion

###############################################################################
# History                                                                     #
###############################################################################
HISTFILE="$HOME/.zsh_history"
HISTSIZE=50000
SAVEHIST=10000
setopt EXTENDED_HISTORY                                                       # write the history file in the ":start:elapsed;command" format
setopt HIST_IGNORE_ALL_DUPS                                                   # delete old recorded entry if new entry is a duplicate
setopt HIST_NO_STORE                                                          # remove the history (fc -l) command from the history list when invoked
setopt HIST_REDUCE_BLANKS                                                     # remove superfluous blanks from each command line being added to the history list
setopt SHARE_HISTORY                                                          # share history between all sessions

###############################################################################
# Plugins                                                                     #
###############################################################################
source "$ZINIT_HOME/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

zinit snippet OMZL::git.zsh
zinit snippet OMZL::clipboard.zsh
zinit cdclear -q

###############################################################################
# Key-bindings                                                                #
###############################################################################
bindkey -v                                                                    # vi mode
export KEYTIMEOUT=1

# change cursor shape for different vi modes
function zle-keymap-select () {
    case $KEYMAP in
        vicmd) echo -ne '\e[1 q';;                                            # block
        viins|main) echo -ne '\e[5 q';;                                       # beam
    esac
}
zle -N zle-keymap-select
zle-line-init() {
    zle -K viins                                                              # initiate `vi insert` as keymap (can be removed if `bindkey -V` has been set elsewhere)
    echo -ne "\e[5 q"
}
zle -N zle-line-init
echo -ne '\e[5 q'                                                             # use beam shape cursor on startup
preexec() { echo -ne '\e[5 q' ;}                                              # use beam shape cursor for each new prompt

bindkey -M menuselect '^k' vi-up-line-or-history                              # select the top element in the menu
bindkey -M menuselect '^j' vi-down-line-or-history                            # select the bottom element in the menu
bindkey -M menuselect '^h' vi-backward-char                                   # select the left element in the menu
bindkey -M menuselect '^l' vi-forward-char                                    # select the right element in the menu

autoload -z edit-command-line
zle -N edit-command-line
bindkey -M vicmd "^E" edit-command-line                                       # [Ctrl-e]    - edit the current command line in $EDITOR
bindkey -M viins "^A" vi-beginning-of-line                                    # [Ctrl-a]    - move to begin of line
bindkey -M viins "^E" vi-end-of-line                                          # [Ctrl-e]    - move to end of line
bindkey -M viins "^W" backward-delete-word                                    # [Ctrl-w]    - delete word behind cursor
bindkey -M viins "^U" backward-kill-line                                      # [Ctrl-u]    - delete line behind cursor
bindkey -M viins "^D" backward-delete-char                                    # [Ctrl-d]    - delete backward
bindkey "^?" backward-delete-char                                             # [Backspace] - delete backward

autoload -Uz up-line-or-beginning-search
zle -N up-line-or-beginning-search
bindkey "^K" up-line-or-beginning-search                                      # [Ctrl-k]    - search backward in the history
bindkey "^[[A" up-line-or-beginning-search                                    # [Up]        - search backward in the history

autoload -Uz down-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey "^J" down-line-or-beginning-search                                    # [Ctrl-j]    - search forward in the history
bindkey "^[[B" down-line-or-beginning-search                                  # [Down]      - search forward in the history

bindkey '^R' history-incremental-search-backward                              # [Ctrl-r]    - search backward incrementally for a specified string in the history
bindkey '^S' history-incremental-search-forward                               # [Ctrl-s]    - search forward incrementally for a specified string in the history

###############################################################################
# Aliases                                                                     #
###############################################################################
[ -f "$DOTFILES/zsh/aliases.zsh" ] && source "$DOTFILES/zsh/aliases.zsh"

###############################################################################
# Prompt                                                                      #
###############################################################################
autoload -U colors && colors                                                  # ls colors
export LSCOLORS="Gxfxcxdxbxegedabagacad"                                      # enable ls colors
setopt PROMPT_SUBST                                                           # parameter expansion, command substitution and arithmetic expansion are performed in prompts
[ -f "$DOTFILES/zsh/prompt.zsh" ] && source "$DOTFILES/zsh/prompt.zsh"        # depend on oh-my-zsh:lib/git.zsh
